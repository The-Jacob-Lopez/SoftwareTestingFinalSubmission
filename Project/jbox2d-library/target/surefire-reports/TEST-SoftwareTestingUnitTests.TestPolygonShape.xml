<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="SoftwareTestingUnitTests.TestPolygonShape" time="0.158" tests="67" errors="0" skipped="0" failures="12">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/test-classes:/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/classes:/Users/jacob/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.0-M1/junit-jupiter-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.0-M1/junit-jupiter-api-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/jacob/.m2/repository/org/junit/platform/junit-platform-commons/1.11.0-M1/junit-platform-commons-1.11.0-M1.jar:/Users/jacob/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.0-M1/junit-jupiter-params-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.0-M1/junit-jupiter-engine-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/junit/platform/junit-platform-engine/1.11.0-M1/junit-platform-engine-1.11.0-M1.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/21.0.2/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/surefire/surefirebooter16795245020422811836.jar /Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/surefire 2024-04-23T19-04-46_172-jvmRun1 surefire16132403002998951143tmp surefire_0647766459816529912tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/test-classes:/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/classes:/Users/jacob/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.0-M1/junit-jupiter-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.0-M1/junit-jupiter-api-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/jacob/.m2/repository/org/junit/platform/junit-platform-commons/1.11.0-M1/junit-platform-commons-1.11.0-M1.jar:/Users/jacob/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.0-M1/junit-jupiter-params-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.0-M1/junit-jupiter-engine-5.11.0-M1.jar:/Users/jacob/.m2/repository/org/junit/platform/junit-platform-engine/1.11.0-M1/junit-platform-engine-1.11.0-M1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/jacob"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-01-16"/>
    <property name="java.home" value="/usr/local/Cellar/openjdk/21.0.2/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library/target/surefire/surefirebooter16795245020422811836.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="21.0.2"/>
    <property name="user.name" value="jacob"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="13.6.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/jacob/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/55/w0grjd6x5p79__93qt7jh79r0000gn/T/"/>
    <property name="java.version" value="21.0.2"/>
    <property name="user.dir" value="/Users/jacob/Desktop/software_testing_debugging/clever-manticore/jbox2d-library"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/jacob/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="21.0.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="65.0"/>
    <property name="maven.test.failure.ignore" value="true"/>
  </properties>
  <testcase name="testGetNormals{Vec2[]}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testSet{Vec2[], int}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.004"/>
  <testcase name="testSet{Vec2[], int}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSet{Vec2[], int}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003">
    <failure message="expected: &lt;5&gt; but was: &lt;4&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <5> but was: <4>
	at SoftwareTestingUnitTests.TestPolygonShape.testSet(TestPolygonShape.java:85)
]]></failure>
  </testcase>
  <testcase name="testSet{Vec2[], int}[4]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSet{Vec2[], int}[5]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at SoftwareTestingUnitTests.TestPolygonShape.testSet(TestPolygonShape.java:84)
</failure>
  </testcase>
  <testcase name="testSet{Vec2[], int}[6]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at SoftwareTestingUnitTests.TestPolygonShape.testSet(TestPolygonShape.java:84)
</failure>
  </testcase>
  <testcase name="testSet{Vec2[], int}[7]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure message="expected: &lt;5&gt; but was: &lt;4&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <5> but was: <4>
	at SoftwareTestingUnitTests.TestPolygonShape.testSet(TestPolygonShape.java:85)
]]></failure>
  </testcase>
  <testcase name="testSet{Vec2[], int}[8]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testSet{Vec2[], int}[9]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.002">
    <failure message="expected: &lt;5&gt; but was: &lt;4&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <5> but was: <4>
	at SoftwareTestingUnitTests.TestPolygonShape.testSet(TestPolygonShape.java:85)
]]></failure>
  </testcase>
  <testcase name="testGetChildCount" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testCentroidToOut{Vec2[]}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testValidate{Vec2[], boolean}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testValidate{Vec2[], boolean}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure message="expected: &lt;false&gt; but was: &lt;true&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <false> but was: <true>
	at SoftwareTestingUnitTests.TestPolygonShape.testValidate(TestPolygonShape.java:443)
]]></failure>
    <system-out><![CDATA[[(2.0,0.0), (0.0,2.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (0.0,0.0)]
]]></system-out>
  </testcase>
  <testcase name="testGetVertices{Vec2[]}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testTestPoint{Vec2[], int, Vec2, boolean}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003"/>
  <testcase name="testTestPoint{Vec2[], int, Vec2, boolean}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testTestPoint{Vec2[], int, Vec2, boolean}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testComputeCentroidToOut{Vec2[], Vec2}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.002"/>
  <testcase name="testComputeCentroidToOut{Vec2[], Vec2}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testComputeAABBTransform{Vec2[], int, float, float, float, float}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003"/>
  <testcase name="testComputeAABBTransform{Vec2[], int, float, float, float, float}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testComputeAABBTransform{Vec2[], int, float, float, float, float}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testComputeAABB{Vec2[], int, float, float, float, float}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testComputeAABB{Vec2[], int, float, float, float, float}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testComputeMass{Vec2[], float, Vec2, float, float}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003"/>
  <testcase name="testComputeMass{Vec2[], float, Vec2, float, float}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testComputeMass{Vec2[], float, Vec2, float, float}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testComputeMass{Vec2[], float, Vec2, float, float}[4]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testCloneProducesIdenticalObject" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testCentroid{Vec2[], Vec2}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSetInvalid{Vec2[], int}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testSetInvalid{Vec2[], int}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSetAsBoxArgsWithCenter{float, float, Vec2[]}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003"/>
  <testcase name="testTestPointTransform{Vec2[], int, Vec2, boolean}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testTestPointTransform{Vec2[], int, Vec2, boolean}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testTestPointTransform{Vec2[], int, Vec2, boolean}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.004"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.004"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[4]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[5]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[6]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[7]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testRaycast{Vec2[], Vec2, Vec2, boolean}[8]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testSetAsBox2{float, float, Vec2, float, Vec2[]}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.004"/>
  <testcase name="testSetAsBox2{float, float, Vec2, float, Vec2[]}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSetAsBox2{float, float, Vec2, float, Vec2[]}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testSetAsBox2{float, float, Vec2, float, Vec2[]}[4]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSetAsBox2{float, float, Vec2, float, Vec2[]}[5]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testInitialization" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testCloneProducesDistinctObject" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testGetVertexCount{Vec2[], int}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testGetVertexCount{Vec2[], int}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testGetVertexCount{Vec2[], int}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure message="expected: &lt;5&gt; but was: &lt;4&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <5> but was: <4>
	at SoftwareTestingUnitTests.TestPolygonShape.testGetVertexCount(TestPolygonShape.java:291)
]]></failure>
  </testcase>
  <testcase name="testGetVertexCount{Vec2[], int}[4]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testGetVertexCount{Vec2[], int}[5]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at SoftwareTestingUnitTests.TestPolygonShape.testGetVertexCount(TestPolygonShape.java:290)
</failure>
  </testcase>
  <testcase name="testGetVertexCount{Vec2[], int}[6]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at SoftwareTestingUnitTests.TestPolygonShape.testGetVertexCount(TestPolygonShape.java:290)
</failure>
  </testcase>
  <testcase name="testGetVertexCount{Vec2[], int}[7]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure message="expected: &lt;5&gt; but was: &lt;4&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <5> but was: <4>
	at SoftwareTestingUnitTests.TestPolygonShape.testGetVertexCount(TestPolygonShape.java:291)
]]></failure>
  </testcase>
  <testcase name="testGetVertexCount{Vec2[], int}[8]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testGetVertexCount{Vec2[], int}[9]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001">
    <failure message="expected: &lt;5&gt; but was: &lt;4&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <5> but was: <4>
	at SoftwareTestingUnitTests.TestPolygonShape.testGetVertexCount(TestPolygonShape.java:291)
]]></failure>
  </testcase>
  <testcase name="testGetVertex{Vec2[], int, int}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at SoftwareTestingUnitTests.TestPolygonShape.testGetVertex(TestPolygonShape.java:310)
</failure>
  </testcase>
  <testcase name="testGetVertex{Vec2[], int, int}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
  <testcase name="testGetVertex{Vec2[], int, int}[3]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testRaycastTransform{Vec2[], Vec2, Vec2, boolean, float, float}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.003"/>
  <testcase name="testRaycastTransform{Vec2[], Vec2, Vec2, boolean, float, float}[2]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0.001"/>
  <testcase name="testSetAsBox{float, float, Vec2[]}[1]" classname="SoftwareTestingUnitTests.TestPolygonShape" time="0"/>
</testsuite>